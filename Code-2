import numpy as np
import matplotlib.pyplot as plt

# Simulate network conditions for a series of time intervals
time_intervals = 100
network_conditions = np.random.rand(time_intervals, 2)  # Random conditions: [latency multiplier, throughput multiplier]

# Parameters for the simulation
protocols = ['Protocol A', 'Protocol B', 'Protocol C']
latency_results = {protocol: [] for protocol in protocols}
throughput_results = {protocol: [] for protocol in protocols}

# Baseline conditions
base_latency = 10  # ms
base_throughput = 100  # Mbps

# Simulate each protocol's performance under varying network conditions
for condition in network_conditions:
    latency_multiplier, throughput_multiplier = condition

    for protocol in protocols:
        if protocol == 'Protocol A':
            # Hypothetical performance characteristics
            latency = base_latency * latency_multiplier * np.random.uniform(0.9, 1.1)
            throughput = base_throughput * throughput_multiplier * np.random.uniform(0.9, 1.1)
        elif protocol == 'Protocol B':
            latency = base_latency * latency_multiplier * np.random.uniform(0.8, 1.2)
            throughput = base_throughput * throughput_multiplier * np.random.uniform(0.8, 1.2)
        elif protocol == 'Protocol C':
            latency = base_latency * latency_multiplier * np.random.uniform(0.7, 1.3)
            throughput = base_throughput * throughput_multiplier * np.random.uniform(0.7, 1.3)

        latency_results[protocol].append(latency)
        throughput_results[protocol].append(throughput)

# Plotting the simulation results
plt.figure(figsize=(14, 6))

# Latency Results
plt.subplot(1, 2, 1)
for protocol in protocols:
    plt.plot(latency_results[protocol], label=protocol)
plt.title('Latency over Time')
plt.xlabel('Time Interval')
plt.ylabel('Latency (ms)')
plt.legend()

# Throughput Results
plt.subplot(1, 2, 2)
for protocol in protocols:
    plt.plot(throughput_results[protocol], label=protocol)
plt.title('Throughput over Time')
plt.xlabel('Time Interval')
plt.ylabel('Throughput (Mbps)')
plt.legend()

plt.tight_layout()
plt.show()

